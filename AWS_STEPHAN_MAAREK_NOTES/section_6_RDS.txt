 █████╗ ██╗    ██╗███████╗    ███████╗ ██████╗ ██╗     ██╗   ██╗████████╗██╗ ██████╗ ███╗   ██╗███████╗     █████╗ ██████╗  ██████╗██╗  ██╗██╗████████╗███████╗ ██████╗████████╗
██╔══██╗██║    ██║██╔════╝    ██╔════╝██╔═══██╗██║     ██║   ██║╚══██╔══╝██║██╔═══██╗████╗  ██║██╔════╝    ██╔══██╗██╔══██╗██╔════╝██║  ██║██║╚══██╔══╝██╔════╝██╔════╝╚══██╔══╝
███████║██║ █╗ ██║███████╗    ███████╗██║   ██║██║     ██║   ██║   ██║   ██║██║   ██║██╔██╗ ██║███████╗    ███████║██████╔╝██║     ███████║██║   ██║   █████╗  ██║        ██║   
██╔══██║██║███╗██║╚════██║    ╚════██║██║   ██║██║     ██║   ██║   ██║   ██║██║   ██║██║╚██╗██║╚════██║    ██╔══██║██╔══██╗██║     ██╔══██║██║   ██║   ██╔══╝  ██║        ██║   
██║  ██║╚███╔███╔╝███████║    ███████║╚██████╔╝███████╗╚██████╔╝   ██║   ██║╚██████╔╝██║ ╚████║███████║    ██║  ██║██║  ██║╚██████╗██║  ██║██║   ██║   ███████╗╚██████╗   ██║   
╚═╝  ╚═╝ ╚══╝╚══╝ ╚══════╝    ╚══════╝ ╚═════╝ ╚══════╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝    ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝   ╚═╝   ╚══════╝ ╚═════╝   ╚═╝   
                  
------------------------------------------
   Amazon RDS - Relational Database 
------------------------------------------

- RDS Stands for Relational Database Service 
- It's managed DB service for DB use SQL as a Query Language 
- It allows you to create databases in the cloud that are managed by AWS 
- It includes 
    - Postgres 
    - MySql 
    - MariaDB 
    - Oracle
    - Microsoft SQL Server 
    - Aurora - AWS Proprietary database 

- RDS is a managed Service 

    - Automated Provisioning, OS Patching 
    - Continuous backups and restore to specific timestamp 
    - Monitoring Dashboards 
    - Read Replicas for improved read Performance 
    - Multi-AZ setup for DR 
    - Maintenance Window for Upgrades 
    - Scaling Capability 
    - Storage backed by EBS - gp2 or iol 

But you can't SSH into your instances

- Helps you increase storage on your RDS DB instance dynamically 
- When RDS detects you are running out of free database storage, it scales automatically 
- Avoid manually scaling your database storage 
- You have to set Maximum Storage Threshold (Maximum Limit for DB Storage)
- Automatically modify storage if: 
    - Free storage is less than 10% of allocated storage 
    - Low-Storage lasts at least 5 minutes 
    - 6 hours have passed since last modification 
- Useful for applications with unpredictable workloads 
- Supports all RDS database Engines ( Maria DB, MySQL, PostgresSQL, SQLServer and Oracle)

RDS Read Replicas 

- Understand the difference between read replicas and Multi-zone AZ 
- Read replicas helps you to scale your reads. Meaning these replicas are optimized for reading which is much 
faster in read speed 
- You could create up to 15 read replicas 
- Within AZ, cross AZ or Cross Region 
- Replication is ASYNC so reads are eventually consistent 
- Replicas can be promoted to their on DB 
- Applications must update the connection string to leverage read replicas 

Example use case : 

- You have a production database which takes a normal load 
- you want to run a reporting application to run some analytics 
- You create a Read replica to run the new workload there 
- The production application is unaffected 
- Read Replicas are used for SELECT (=read) only kind of statements 
(not INSERT, UPDATE, DELETE)

Network Cost associated with RDS Read Replicas 

- In AWS there's a network cost when data goes from one AZ to another 
- for RDS Read Replicas within the same region you don't pay that fee

    Same region but different availability zones - free 
    Different region and Different availability zones - Cost 

RDS Multi-AZ Disaster Recovery 

- SYNC Replication 
- One DNS name - automatic app failover to standby 
- Increase Availability 
- Failover in case of loss of AZ, loss of network, instance 
or storage failure 
- No Manual Intervention in apps 
- Not used for scaling 

RDS - From Single-AZ to Multi-AZ 

- Zero Downtime operation - no need to stop the DB 
- Just click on modify for the database 
- The following 

RDS Custom Options 

- Managed Oracle and MS SQL Server Database with OS and Database Customization 
- RDS: Automates setup, operation and scaling of database in AWS 
- Custom :  access to the underlying database and OS so you can 
    - configure settings
    - Install patches 
    - Enable native features 
    - Access the underlying Ec2 Instance using SSH or SSM Session Manager 
- De-activate the automation mode to perform your customization, better to take a DB 
snapshot before as well. 

RDS vs RDS Custom 
    - RDS - Entire Database is managed by AWS 
    - RDS Custom :  full admin access to the underlying OS and the Database 

Amazon Aurora 

- Aurora is a proprietary technology from AWS - not open sourced 
- Postgres and MySQL are both supported as Aurora DB 
- Aurora is "AWS cloud Optimized and claims 5x performance improvement over 
MySQL nd RDS over 3x the performance of Postgres on RDS 
- Aurora storage automatically fro in increments of 10GB up to 128 TB 
- Aurora can have up to 15 replicas and the replication process is faster than MySQL (sub 10 ms replica )
- Failure in Aurora is instantaneous. It's HA native 
- Aurora costs more than RDS - 20% more but its more efficient 

Aurora High Availability and Read Scaling 

- 6 copies of your data across AZ 
    - 4 copies out of 6 needed for writes 
    - 3 copies out of 6 needed for reads 
    - self-healing with peer-to-peer replication 
    - storage is striped across 100s of volumes 

- One Aurora Instances takes writes 
- Automated failover for master in less than 30 seconds 
- Master + up to 15 aurora read replicas serve reads 
- Support for cross region replication 

Features of Aurora 

- Automatic fail-over 
- Backup and Recovery 
- Isolation and Security 
- Industry compliance 
- Push-button scaling 
- Automated Patching with Zero Downtime 
- Advanced Monitoring 
- Routing Maintenance 
- Backtrack: restore data at any point of time without using backups 

Features of Aurora in Detail 

- Aurora Custom Endpoints 

    - Read and Write replicas have their own functionality to increase performance 
    - there are multiple read replicas with a load balancer which reduces your latency in reading from Aurora database. 
    - With this you also could have a custom endpoint to your database. 
    - Using the Custom Endpoints you could run your analytical queries on your database 
    - Define a subset of Aurora Instances as a Custom Endpoints 
    - Example : Run analytical queries on specific endpoints 
    - The Reader Endpoints is generally not used after defining Custom Endpoints 

- Aurora Serverless 

    - Automated database instantiation and Autoscaling based on Actual Usage 
    - Good for infrequent intermittent or unpredictable workloads 
    - No capacity planning 
    - Pay per second can be more cost-effective 

- Aurora Multi-Master 

    - In case you want continuous write availability for the writer nodes 
    - Every node does R/W - vs promoting a Read Replicas as the new Master 

Global Aurora 

- Aurora Cross Region Read Replicas 

    - Useful for disaster recovery 
    - Simple to Put in Place 

- Aurora Global Database 

    - 1 Primary Region (read/write)
    - Up to 5 secondary (read-only) regions, replication lag is less than 1 second 
    - Up to 16 Read Replicas per secondary region 
    - Helps fro decreasing Latency 
    - promoting another region has an RTO of < 1 minutes
    - Typical Cross-Region replication takes less than 1 second 

- Aurora Machine Learning Instances 

    - Enable you to add ML-based Predictions to your applications via sql 
    - Simple, optimized and secure integration between Aurora and AWS ML Services 
    - Supported Services 
        - Amazon Sage Maker - use with any ML Model 
        - Amazon Comprehend 
    - You don't need to have ML Experience 
    - Use case: fraud detection, ads targeting, sentiment analysis, product recommendations 

